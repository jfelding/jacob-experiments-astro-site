---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrev from "@components/BackToPrev.astro";
import {
  loadProjectFromFilename,
  loadOutputFromFilename,
  generateRelatedFilesOverview,
} from "src/project.type";
import Link from "@components/Link.astro";

export async function getStaticPaths() {
  const ideas = (await getCollection("ideas"))
    .filter((idea) => !idea.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return ideas.map((idea) => ({
    params: { slug: idea.slug },
    props: idea,
  }));
}
type Props = CollectionEntry<"ideas">;

const idea = Astro.props;
const { Content } = await idea.render();
---

<PageLayout title={idea.data.title} description={idea.data.description}>
  <Container>
    <div class="animate">
      <BackToPrev href="/ideas"> Back to ideas </BackToPrev>
    </div>
    <div class="space-y-1 my-10">
      <div class="animate flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={idea.data.date} />
        </div>

        <div class="font-base text-sm">
          {idea.body ? readingTime(idea.body) : ''}
        </div>
      </div>
      <div class="animate text-2xl font-semibold text-black dark:text-white">
        {idea.data.title}
      </div>
      <div
        class="p-4 rounded-lg animate dark:border-white/50 hover:bg-black/5 dark:hover:bg-white/5 hover:text-black dark:hover:text-white"
      >
        <div
          set:html={generateRelatedFilesOverview(
            idea.data.relatedProjectFiles,
            "Related Projects",
            "projects",
            loadProjectFromFilename
          )}
        />

        <div
          set:html={generateRelatedFilesOverview(
            idea.data.relatedOutputFiles,
            "Related Outputs",
            "blog",
            loadOutputFromFilename
          )}
        />
      </div>
    </div>

    <article class="animate">
      <Content />
    </article>
  </Container>
</PageLayout>
